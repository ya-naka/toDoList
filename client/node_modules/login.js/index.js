import axios from 'axios';
import qs from 'qs'
import crypto from './jcrypto.js'

const login_axios = axios.create({
  timeout:5000
});

login_axios.defaults.headers = {
  'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'
};

var encrypt =true ;  // 是否加密
const keys = '1234567812345678', ivKeys = '1234567812345678', algorithm = 'aes-128-cbc', charType = 'hex'

// 加密 或 不加密
login_axios.defaults.transformRequest = data =>{
  if(encrypt){
    // 加密
    let newData = '';
    data.split("&").forEach(function (val, ind) {
      let paramsArry = val.split("=");
      if (paramsArry.length == 2) {
        if (ind > 0) newData += "&";
        if (paramsArry[0] == "page" || paramsArry[0] == "limit") {
          newData += paramsArry[0] + "=" + paramsArry[1];
        } else {
          newData += paramsArry[0] + "=" + crypto.encrypt(paramsArry[1], keys, ivKeys, algorithm, charType);
        }
      }
    });
    return newData
  }else{
    // 不加密
    return data
  }
};

//request 拦截器
login_axios.interceptors.request.use(
config =>{
  config.headers['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8';
  if(config.method === 'post'){
    config.data = qs.stringify(config.data)
  }
  return config
},
error => {
  Promise.reject(error)
}
);



//*S  登录 * //

var login_post  = function (url,data,options,encryption=true){
  encrypt = encryption;
  return login_axios.post( url ,data,options)
};

var login_get = function ( url,data,options,encryption=false){
  encrypt = encryption;
  return login_axios.get(url, {params:data,options})

};

//*E  登录 * //


//* S注册 *//
var registered_post  = function (url,data,options,encryption=true){
  encrypt = encryption;
  return login_axios.post( url ,data,options)
};

var registered_get = function ( url,data,options,encryption=true){
  encrypt = encryption;
  return  login_axios.get(url, {params:data,options})
};
//*E  登录 * //
export default {login_post,login_get,registered_post,registered_get};
